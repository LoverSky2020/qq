<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tty.emall.mapper.GoodsMapper">
    <resultMap id="BaseResultMap" type="com.tty.emall.entity.Goods">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="cover" jdbcType="VARCHAR" property="cover"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="intro" jdbcType="VARCHAR" property="intro"/>
        <result column="spec" jdbcType="VARCHAR" property="spec"/>
        <result column="price" jdbcType="INTEGER" property="price"/>
        <result column="stock" jdbcType="INTEGER" property="stock"/>
        <result column="sales" jdbcType="INTEGER" property="sales"/>
        <result column="type_id" jdbcType="INTEGER" property="typeId"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.tty.emall.entity.Goods">
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
    </resultMap>

    <!--
        SELECT
	types.id typeId,
	types.`name` typeName,
	types.num typeNum,
	goods.id goodsId,
	goods.cover goodsCover,
	goods.`name` goodsName,
	goods.intro goodsIntro,
	goods.spec goodsSpec,
	goods.price goodsPrice,
	goods.stock goodsStock,
	goods.sales goodsSales,
	goods.content goodsContent,
	goods.type_id goodsTypeId
FROM
	`goods`
   LEFT JOIN types ON types.id = goods.type_id;
    -->
    <!--商品分类结果集映射-->
    <resultMap id="GoodsVoResultMap" type="com.tty.emall.vo.GoodsVo">
        <id column="goodsId" jdbcType="INTEGER" property="id"/>
        <result column="goodsCover" jdbcType="VARCHAR" property="cover"/>
        <result column="goodsName" jdbcType="VARCHAR" property="name"/>
        <result column="goodsIntro" jdbcType="VARCHAR" property="intro"/>
        <result column="goodsSpec" jdbcType="VARCHAR" property="spec"/>
        <result column="goodsPrice" jdbcType="INTEGER" property="price"/>
        <result column="goodsStock" jdbcType="INTEGER" property="stock"/>
        <result column="goodsSales" jdbcType="INTEGER" property="sales"/>
        <result column="goodsTypeId" jdbcType="INTEGER" property="typeId"/>
        <association property="type" column="type_id" javaType="com.tty.emall.entity.Type">
            <id column="typeId" property="id" />
            <result column="typeName" property="name" />
            <result column="typeNum" property="num" />
        </association>
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, cover, name, intro, spec, price, stock, sales, type_id
  </sql>
    <sql id="Blob_Column_List">
    content
  </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.tty.emall.entity.GoodsExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from goods
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.tty.emall.entity.GoodsExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from goods
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from goods
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.tty.emall.entity.GoodsExample">
        delete from goods
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.tty.emall.entity.Goods">
    insert into goods (id, cover, name, 
      intro, spec, price, 
      stock, sales, type_id, 
      content)
    values (#{id,jdbcType=INTEGER}, #{cover,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{intro,jdbcType=VARCHAR}, #{spec,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, 
      #{stock,jdbcType=INTEGER}, #{sales,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.tty.emall.entity.Goods">
        insert into goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="cover != null">
                cover,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="intro != null">
                intro,
            </if>
            <if test="spec != null">
                spec,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="stock != null">
                stock,
            </if>
            <if test="sales != null">
                sales,
            </if>
            <if test="typeId != null">
                type_id,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="cover != null">
                #{cover,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="intro != null">
                #{intro,jdbcType=VARCHAR},
            </if>
            <if test="spec != null">
                #{spec,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=INTEGER},
            </if>
            <if test="stock != null">
                #{stock,jdbcType=INTEGER},
            </if>
            <if test="sales != null">
                #{sales,jdbcType=INTEGER},
            </if>
            <if test="typeId != null">
                #{typeId,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.tty.emall.entity.GoodsExample" resultType="java.lang.Long">
        select count(*) from goods
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>

    <!--查询推荐商品 虽然页面上是只铺六条数据，全部查出来也没事，但是为了性能还是只查六条吧-->
    <select id="selectByRecommend" resultType="com.tty.emall.entity.Goods">

   SELECT
	goods.id id,
	goods.cover cover,
	goods.`name` `name`,
	goods.intro intro,
	goods.spec spec,
	goods.price price,
	goods.stock stock,
	goods.sales sales,
	goods.content content
FROM
	goods
	JOIN tops ON goods.id = tops.good_id
	limit 0, 6
  </select>
    <select id="selectGoodsTypeVoById" resultMap="GoodsVoResultMap">
        SELECT
	types.id typeId,
	types.`name` typeName,
	types.num typeNum,
	goods.id goodsId,
	goods.cover goodsCover,
	goods.`name` goodsName,
	goods.intro goodsIntro,
	goods.spec goodsSpec,
	goods.price goodsPrice,
	goods.stock goodsStock,
	goods.sales goodsSales,
	goods.content goodsContent,
	goods.type_id goodsTypeId
    FROM
	`goods`
    LEFT JOIN types ON types.id = goods.type_id
    WHERE
    goods.id = #{id}
    </select>

    <update id="updateByExampleSelective" parameterType="map">
        update goods
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.cover != null">
                cover = #{record.cover,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.intro != null">
                intro = #{record.intro,jdbcType=VARCHAR},
            </if>
            <if test="record.spec != null">
                spec = #{record.spec,jdbcType=VARCHAR},
            </if>
            <if test="record.price != null">
                price = #{record.price,jdbcType=INTEGER},
            </if>
            <if test="record.stock != null">
                stock = #{record.stock,jdbcType=INTEGER},
            </if>
            <if test="record.sales != null">
                sales = #{record.sales,jdbcType=INTEGER},
            </if>
            <if test="record.typeId != null">
                type_id = #{record.typeId,jdbcType=INTEGER},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update goods
        set id = #{record.id,jdbcType=INTEGER},
        cover = #{record.cover,jdbcType=VARCHAR},
        name = #{record.name,jdbcType=VARCHAR},
        intro = #{record.intro,jdbcType=VARCHAR},
        spec = #{record.spec,jdbcType=VARCHAR},
        price = #{record.price,jdbcType=INTEGER},
        stock = #{record.stock,jdbcType=INTEGER},
        sales = #{record.sales,jdbcType=INTEGER},
        type_id = #{record.typeId,jdbcType=INTEGER},
        content = #{record.content,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update goods
        set id = #{record.id,jdbcType=INTEGER},
        cover = #{record.cover,jdbcType=VARCHAR},
        name = #{record.name,jdbcType=VARCHAR},
        intro = #{record.intro,jdbcType=VARCHAR},
        spec = #{record.spec,jdbcType=VARCHAR},
        price = #{record.price,jdbcType=INTEGER},
        stock = #{record.stock,jdbcType=INTEGER},
        sales = #{record.sales,jdbcType=INTEGER},
        type_id = #{record.typeId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.tty.emall.entity.Goods">
        update goods
        <set>
            <if test="cover != null">
                cover = #{cover,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="intro != null">
                intro = #{intro,jdbcType=VARCHAR},
            </if>
            <if test="spec != null">
                spec = #{spec,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=INTEGER},
            </if>
            <if test="stock != null">
                stock = #{stock,jdbcType=INTEGER},
            </if>
            <if test="sales != null">
                sales = #{sales,jdbcType=INTEGER},
            </if>
            <if test="typeId != null">
                type_id = #{typeId,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.tty.emall.entity.Goods">
    update goods
    set cover = #{cover,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      intro = #{intro,jdbcType=VARCHAR},
      spec = #{spec,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      stock = #{stock,jdbcType=INTEGER},
      sales = #{sales,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.tty.emall.entity.Goods">
    update goods
    set cover = #{cover,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      intro = #{intro,jdbcType=VARCHAR},
      spec = #{spec,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      stock = #{stock,jdbcType=INTEGER},
      sales = #{sales,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>