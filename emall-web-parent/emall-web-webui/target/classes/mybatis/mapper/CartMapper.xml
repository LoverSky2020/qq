<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tty.emall.mapper.CartMapper">
  <resultMap id="BaseResultMap" type="com.tty.emall.entity.Cart">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="good_id" jdbcType="INTEGER" property="goodId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>

  <!--
  SELECT
	carts.id cartId,
	carts.amount cartAmount,
	carts.good_id cartsGoodsId,
	carts.user_id cartUserId,
	goods.id goodsId,
	goods.`name` goodsName,
	goods.cover goodsCover,
	goods.intro goodsIntro,
	goods.price goodsPrice
FROM
	`carts`
	JOIN goods ON carts.good_id = goods.id
WHERE
	carts.user_id = 1
  -->

  <resultMap id="CartVoResultMap" type="com.tty.emall.vo.CartVo">
    <id column="cartId" jdbcType="INTEGER" property="id" />
    <result column="cartAmount" jdbcType="INTEGER" property="amount" />
    <result column="cartsGoodsId" jdbcType="INTEGER" property="goodId" />
    <result column="cartUserId" jdbcType="INTEGER" property="userId" />
    <association property="goods" column="good_id"  javaType="com.tty.emall.entity.Goods">
      <id property="id" column="goodsId" />
      <result property="name" column="goodsName" />
      <result property="cover" column="goodsCover" />
      <result property="intro" column="goodsIntro" />
      <result property="price" column="goodsPrice" />
    </association>
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, amount, good_id, user_id
  </sql>
  <select id="selectByExample" parameterType="com.tty.emall.entity.CartExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from carts
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from carts
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from carts
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tty.emall.entity.CartExample">
    delete from carts
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tty.emall.entity.Cart">
    insert into carts (id, amount, good_id, 
      user_id)
    values (#{id,jdbcType=INTEGER}, #{amount,jdbcType=INTEGER}, #{goodId,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.tty.emall.entity.Cart">
    insert into carts
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="goodId != null">
        good_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="goodId != null">
        #{goodId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tty.emall.entity.CartExample" resultType="java.lang.Long">
    select count(*) from carts
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <!--查询用户的购物车-->
    <select id="selectByCartVo" resultMap="CartVoResultMap">
      SELECT
	carts.id cartId,
	carts.amount cartAmount,
	carts.good_id cartsGoodsId,
	carts.user_id cartUserId,
	goods.id goodsId,
	goods.`name` goodsName,
	goods.cover goodsCover,
	goods.intro goodsIntro,
	goods.price goodsPrice
    FROM
	`carts`
	JOIN goods ON carts.good_id = goods.id
    WHERE
	carts.user_id = #{userId}
    </select>
    <update id="updateByExampleSelective" parameterType="map">
    update carts
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=INTEGER},
      </if>
      <if test="record.goodId != null">
        good_id = #{record.goodId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update carts
    set id = #{record.id,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=INTEGER},
      good_id = #{record.goodId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tty.emall.entity.Cart">
    update carts
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="goodId != null">
        good_id = #{goodId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tty.emall.entity.Cart">
    update carts
    set amount = #{amount,jdbcType=INTEGER},
      good_id = #{goodId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>